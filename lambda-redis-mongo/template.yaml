AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  redis-mongo

  Sample SAM Template for redis-mongo
  
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Parameters:
  DbUriParameterName:
    Type: String
    Default: "/drone-tracking-app/db-uri"

Globals:
  Function:
    Timeout: 10

Resources:
  LambdaSubnetAZ0:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: vpc-0a410481b2628a05e
      CidrBlock: 172.31.48.0/20
      MapPublicIpOnLaunch: false  # Private Subnet
      AvailabilityZone: !Select
        - 0
        - !GetAZs
          Ref: 'AWS::Region' 
  LambdaSubnetAZ1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: vpc-0a410481b2628a05e
      CidrBlock: 172.31.64.0/20
      MapPublicIpOnLaunch: false  # Private Subnet
      AvailabilityZone: !Select
        - 1
        - !GetAZs
          Ref: 'AWS::Region' 
  
  ElasticIP:
    Type: AWS::EC2::EIP

  NATGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId: subnet-0a3479c654792ff16  # NAT Gateway must be in a public subnet
      AllocationId: !GetAtt ElasticIP.AllocationId

  # ðŸ”€ Private Route Table (Routes Internet Traffic Through NAT Gateway)
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: vpc-0a410481b2628a05e

  PrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGateway

  PrivateSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref LambdaSubnetAZ0
      RouteTableId: !Ref PrivateRouteTable
  PrivateSubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref LambdaSubnetAZ1
      RouteTableId: !Ref PrivateRouteTable
  GetFlightDataFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: get-flight-data/
      Handler: src/app.lambdaHandler
      Runtime: nodejs20.x
      Architectures:
        - x86_64
      VpcConfig:
        SubnetIds:
          - !Ref LambdaSubnetAZ0
          - !Ref LambdaSubnetAZ1
        SecurityGroupIds:
          - "sg-0a422105cec768210"
      Policies:
        - SSMParameterWithSlashPrefixReadPolicy:
            ParameterName: !Ref DbUriParameterName
      Environment:
        Variables:
          REDIS_HOST: clustercfg.redis.ri1ocn.euc1.cache.amazonaws.com
          PARAMETER_NAME: !Ref DbUriParameterName
          LOG_LEVEL: trace


    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints: 
        - src/app.ts
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${GetFlightDataFunction}"
      RetentionInDays: 7

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  GetFlightDataFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt GetFlightDataFunctionRole.Arn
